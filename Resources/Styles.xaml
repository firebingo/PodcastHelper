<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PodcastHelper">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Controls.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<!-- Base Grid Style -->
	<Style TargetType="{x:Type Grid}" x:Key="baseGridStyle">
		<Style.Resources>
			<Style TargetType="{x:Type Label}">
				<Setter Property="Foreground" Value="{StaticResource TextForegroundColor}" />
			</Style>
			<Style TargetType="{x:Type TextBox}">
				<Setter Property="Foreground" Value="{StaticResource TextForegroundColor}" />
				<Setter Property="Background" Value="{StaticResource TextBackgroundColor}" />
				<Setter Property="BorderBrush" Value="{StaticResource TextBorderColor}" />
			</Style>
		</Style.Resources>
	</Style>

	<!-- Top Bar Button Template -->
	<Style TargetType="{x:Type Button}" x:Key="topBarButtonStyle">
		<Setter Property="Height" Value="30"/>
		<Setter Property="Width" Value="50"/>
		<Setter Property="Background" Value="{StaticResource WindowBackgroundColor}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Background" Value="{StaticResource ButtonHighlightColor}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- Top Bar Context Menu Template -->
	<Style TargetType="{x:Type ContextMenu}" x:Key="topBarContextMenuStyle">
		<Setter Property="Background" Value="{StaticResource TextBackgroundColor}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Border x:Name="Border" BorderBrush="{StaticResource TextBorderColor}" Background="{TemplateBinding Background}" BorderThickness="1">
						<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" HorizontalAlignment="Left"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Top Bar Context Menu Item Template -->
	<Style TargetType="{x:Type MenuItem}" x:Key="topBarContextMenuItemStyle">
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template" Value="{StaticResource topBarTopLevelHeader}"/>
				<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
			</Trigger>
			<!--<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{StaticResource topBarTopLevelItem}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{StaticResource topBarSubLevelHeader}"/>
			</Trigger>-->
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Template" Value="{StaticResource topBarSubLevelItem}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Top Bar Menu Seperator Template -->
	<Style x:Key="topBarSeperatorStyle" TargetType="{x:Type Separator}">
		<Setter Property="Background" Value="{StaticResource TextForegroundColor}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextForegroundColor}"/>
		<Setter Property="MinHeight" Value="1"/>
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="30,0,0,0"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>